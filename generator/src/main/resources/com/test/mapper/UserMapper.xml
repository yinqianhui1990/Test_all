<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.test.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.test.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="CHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="CHAR" />
    <result column="sync_create" property="syncCreate" jdbcType="TIMESTAMP" />
    <result column="sync_update" property="syncUpdate" jdbcType="TIMESTAMP" />
    <result column="login_name" property="loginName" jdbcType="VARCHAR" />
    <result column="ward_code" property="wardCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, code, name, password, gender, phone, email, remark, flag, sync_create, sync_update, 
    login_name, ward_code
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from com_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from com_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.test.User" >
    insert into com_user (id, code, name, 
      password, gender, phone, 
      email, remark, flag, sync_create, 
      sync_update, login_name, ward_code
      )
    values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{flag,jdbcType=CHAR}, #{syncCreate,jdbcType=TIMESTAMP}, 
      #{syncUpdate,jdbcType=TIMESTAMP}, #{loginName,jdbcType=VARCHAR}, #{wardCode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.test.User" >
    insert into com_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="syncCreate != null" >
        sync_create,
      </if>
      <if test="syncUpdate != null" >
        sync_update,
      </if>
      <if test="loginName != null" >
        login_name,
      </if>
      <if test="wardCode != null" >
        ward_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=CHAR},
      </if>
      <if test="syncCreate != null" >
        #{syncCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="syncUpdate != null" >
        #{syncUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="wardCode != null" >
        #{wardCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.test.User" >
    update com_user
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=CHAR},
      </if>
      <if test="syncCreate != null" >
        sync_create = #{syncCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="syncUpdate != null" >
        sync_update = #{syncUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginName != null" >
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="wardCode != null" >
        ward_code = #{wardCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.test.User" >
    update com_user
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=CHAR},
      sync_create = #{syncCreate,jdbcType=TIMESTAMP},
      sync_update = #{syncUpdate,jdbcType=TIMESTAMP},
      login_name = #{loginName,jdbcType=VARCHAR},
      ward_code = #{wardCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--当参数为一个时可以写成code = #{code},当参数大于一个时只能写成code = #{param1} and ward_code=#{ param2}...-->
  <select id="selectByCode" resultMap="BaseResultMap" parameterType="String" >
    select
    <include refid="Base_Column_List" />
    from com_user
    where code = #{param1} and ward_code=#{ param2}
  </select>

</mapper>